题意：求字符串A和B长度至少为K的公共子串个数

分析： 把A和B各个后缀的LCP-K+1的值求和
先用一个分隔符把A和B拼接起来，然后构造height数组

划分height数组以确保每组字符串之间的公共子串长度至少为K长度，各组互不干涉。

问题可转化为两个子问题
求一组中一个A串与之前B串形成的LCP-K+1值求和 
一组中一个B串与之前A串形成的LCP-K+1值求和
二者类似，只讨论第一种情况

利用单调栈优化，栈中的每个结点有两个变量
h记录到i为止最小的height，cnt记录A串数目
维护栈内所有元素的h从顶到底递减

具体实现见代码